import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as r,o as a}from"./app-BS2-Vf28.js";const e={};function p(s,t){return a(),o("div",null,[...t[0]||(t[0]=[r('<p>API 网关作为现代分布式系统的核心组件，提供了多种基本功能，这些功能共同构成了系统高效、安全、可维护的基础。本文将详细介绍 API 网关的基本功能及其在实际应用中的价值。</p><h2 id="请求路由与负载均衡" tabindex="-1"><a class="header-anchor" href="#请求路由与负载均衡"><span>请求路由与负载均衡</span></a></h2><p>请求路由和负载均衡是 API 网关最基础也是最重要的功能之一。</p><h3 id="请求路由" tabindex="-1"><a class="header-anchor" href="#请求路由"><span>请求路由</span></a></h3><p>请求路由是指根据预定义的规则将客户端请求转发到相应的后端服务。路由规则通常基于以下信息：</p><ol><li><p><strong>URL 路径</strong><br> 根据请求的 URL 路径匹配相应的服务，如 <code>/api/users/*</code> 路由到用户服务。</p></li><li><p><strong>HTTP 方法</strong><br> 结合 HTTP 方法进行路由，如 GET <code>/api/products</code> 和 POST <code>/api/products</code> 可以路由到不同的处理逻辑。</p></li><li><p><strong>请求头</strong><br> 根据请求头中的特定字段进行路由，如根据 <code>Content-Type</code> 或自定义头进行路由。</p></li><li><p><strong>查询参数</strong><br> 根据 URL 中的查询参数进行路由。</p></li><li><p><strong>主机名</strong><br> 根据请求的主机名进行路由，支持多租户场景。</p></li></ol><h3 id="负载均衡" tabindex="-1"><a class="header-anchor" href="#负载均衡"><span>负载均衡</span></a></h3><p>负载均衡是指在多个服务实例之间分配请求，以提高系统的可用性和性能。常见的负载均衡算法包括：</p><ol><li><p><strong>轮询（Round Robin）</strong><br> 依次将请求分发到各个服务实例。</p></li><li><p><strong>加权轮询（Weighted Round Robin）</strong><br> 根据服务实例的权重分配请求，权重高的实例处理更多请求。</p></li><li><p><strong>最少连接（Least Connections）</strong><br> 将请求分发到当前连接数最少的实例。</p></li><li><p><strong>IP 哈希（IP Hash）</strong><br> 根据客户端 IP 地址进行哈希计算，确保同一客户端的请求总是路由到同一实例。</p></li></ol><h3 id="动态路由" tabindex="-1"><a class="header-anchor" href="#动态路由"><span>动态路由</span></a></h3><p>现代 API 网关支持动态路由配置，可以根据服务注册中心的信息动态更新路由规则，适应服务实例的变化。</p><h2 id="身份认证与授权" tabindex="-1"><a class="header-anchor" href="#身份认证与授权"><span>身份认证与授权</span></a></h2><p>身份认证和授权是保障系统安全的关键功能。</p><h3 id="身份认证" tabindex="-1"><a class="header-anchor" href="#身份认证"><span>身份认证</span></a></h3><p>API 网关支持多种身份认证机制：</p><ol><li><p><strong>API Key</strong><br> 最简单的认证方式，客户端在请求中包含 API Key。</p></li><li><p><strong>JWT Token</strong><br> 使用 JSON Web Token 进行无状态认证。</p></li><li><p><strong>OAuth 2.0</strong><br> 标准的授权框架，支持第三方应用访问用户资源。</p></li><li><p><strong>OpenID Connect</strong><br> 基于 OAuth 2.0 的身份认证协议。</p></li><li><p><strong>客户端证书</strong><br> 基于 TLS 客户端证书的身份认证。</p></li></ol><h3 id="授权控制" tabindex="-1"><a class="header-anchor" href="#授权控制"><span>授权控制</span></a></h3><p>在身份认证通过后，API 网关还需要进行授权控制：</p><ol><li><p><strong>基于角色的访问控制（RBAC）</strong><br> 根据用户角色确定其权限范围。</p></li><li><p><strong>基于属性的访问控制（ABAC）</strong><br> 根据用户属性、资源属性、环境条件等进行细粒度授权。</p></li><li><p><strong>API 级别授权</strong><br> 控制哪些客户端可以访问哪些 API。</p></li></ol><h2 id="协议转换" tabindex="-1"><a class="header-anchor" href="#协议转换"><span>协议转换</span></a></h2><p>在分布式系统中，不同的服务可能使用不同的通信协议。API 网关可以在不同协议之间进行转换，简化客户端的开发。</p><h3 id="http-协议转换" tabindex="-1"><a class="header-anchor" href="#http-协议转换"><span>HTTP 协议转换</span></a></h3><ol><li><p><strong>HTTP/1.x 与 HTTP/2 转换</strong><br> 支持不同版本的 HTTP 协议之间的转换。</p></li><li><p><strong>REST 与 GraphQL 转换</strong><br> 将 RESTful API 请求转换为 GraphQL 查询。</p></li></ol><h3 id="微服务协议转换" tabindex="-1"><a class="header-anchor" href="#微服务协议转换"><span>微服务协议转换</span></a></h3><ol><li><p><strong>HTTP 与 gRPC 转换</strong><br> 将 HTTP 请求转换为 gRPC 调用，或将 gRPC 响应转换为 HTTP 响应。</p></li><li><p><strong>HTTP 与 WebSocket 转换</strong><br> 支持 WebSocket 连接的建立和管理。</p></li><li><p><strong>消息队列集成</strong><br> 与 Kafka、RabbitMQ 等消息队列系统集成。</p></li></ol><h2 id="流量控制与限流" tabindex="-1"><a class="header-anchor" href="#流量控制与限流"><span>流量控制与限流</span></a></h2><p>流量控制和限流是保护后端服务免受过载的重要机制。</p><h3 id="速率限制" tabindex="-1"><a class="header-anchor" href="#速率限制"><span>速率限制</span></a></h3><p>API 网关可以限制客户端的请求频率，防止后端服务被过多请求压垮：</p><ol><li><p><strong>基于 IP 的限流</strong><br> 限制单个 IP 地址的请求频率。</p></li><li><p><strong>基于用户/应用的限流</strong><br> 限制特定用户或应用的请求频率。</p></li><li><p><strong>基于 API 的限流</strong><br> 限制特定 API 的请求频率。</p></li><li><p><strong>动态限流</strong><br> 根据系统负载动态调整限流策略。</p></li></ol><h3 id="熔断机制" tabindex="-1"><a class="header-anchor" href="#熔断机制"><span>熔断机制</span></a></h3><p>当某个服务出现故障时，API 网关可以自动熔断对该服务的请求，防止故障扩散到整个系统：</p><ol><li><p><strong>故障检测</strong><br> 监控服务的响应时间和错误率。</p></li><li><p><strong>熔断触发</strong><br> 当故障达到阈值时，自动熔断服务。</p></li><li><p><strong>熔断恢复</strong><br> 在适当时间后尝试恢复服务调用。</p></li></ol><h3 id="负载保护" tabindex="-1"><a class="header-anchor" href="#负载保护"><span>负载保护</span></a></h3><p>通过以下方式保护系统免受过载：</p><ol><li><p><strong>并发控制</strong><br> 限制同时处理的请求数量。</p></li><li><p><strong>请求队列</strong><br> 对超出处理能力的请求进行排队处理。</p></li><li><p><strong>优雅降级</strong><br> 在系统压力过大时，暂时关闭非核心功能。</p></li></ol><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结</span></a></h2><p>API 网关的基本功能包括请求路由与负载均衡、身份认证与授权、协议转换、流量控制与限流等。这些功能共同构成了分布式系统高效、安全、可维护的基础。在实际应用中，需要根据具体需求选择和配置相应的功能，以构建满足业务要求的 API 网关系统。</p>',38)])])}const h=n(e,[["render",p]]),c=JSON.parse('{"path":"/posts/api-gateway/1-3-basic-functions-of-api-gateway.html","title":"API 网关的基本功能：构建高效分布式系统的基石","lang":"zh-CN","frontmatter":{"title":"API 网关的基本功能：构建高效分布式系统的基石","date":"2025-08-31T00:00:00.000Z","categories":["APIGateway"],"tags":["api-gateway"],"published":true,"description":"API 网关作为现代分布式系统的核心组件，提供了多种基本功能，这些功能共同构成了系统高效、安全、可维护的基础。本文将详细介绍 API 网关的基本功能及其在实际应用中的价值。 请求路由与负载均衡 请求路由和负载均衡是 API 网关最基础也是最重要的功能之一。 请求路由 请求路由是指根据预定义的规则将客户端请求转发到相应的后端服务。路由规则通常基于以下信息...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"API 网关的基本功能：构建高效分布式系统的基石\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-31T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-01T13:27:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://houbb.github.io/blog-micro-service/posts/api-gateway/1-3-basic-functions-of-api-gateway.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"API 网关的基本功能：构建高效分布式系统的基石"}],["meta",{"property":"og:description","content":"API 网关作为现代分布式系统的核心组件，提供了多种基本功能，这些功能共同构成了系统高效、安全、可维护的基础。本文将详细介绍 API 网关的基本功能及其在实际应用中的价值。 请求路由与负载均衡 请求路由和负载均衡是 API 网关最基础也是最重要的功能之一。 请求路由 请求路由是指根据预定义的规则将客户端请求转发到相应的后端服务。路由规则通常基于以下信息..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-01T13:27:06.000Z"}],["meta",{"property":"article:tag","content":"api-gateway"}],["meta",{"property":"article:published_time","content":"2025-08-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-01T13:27:06.000Z"}]]},"git":{"createdTime":1756698707000,"updatedTime":1756733226000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1},{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":1,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":4.49,"words":1346},"filePathRelative":"posts/api-gateway/1-3-basic-functions-of-api-gateway.md","excerpt":"<p>API 网关作为现代分布式系统的核心组件，提供了多种基本功能，这些功能共同构成了系统高效、安全、可维护的基础。本文将详细介绍 API 网关的基本功能及其在实际应用中的价值。</p>\\n<h2>请求路由与负载均衡</h2>\\n<p>请求路由和负载均衡是 API 网关最基础也是最重要的功能之一。</p>\\n<h3>请求路由</h3>\\n<p>请求路由是指根据预定义的规则将客户端请求转发到相应的后端服务。路由规则通常基于以下信息：</p>\\n<ol>\\n<li>\\n<p><strong>URL 路径</strong><br>\\n根据请求的 URL 路径匹配相应的服务，如 <code>/api/users/*</code> 路由到用户服务。</p>\\n</li>\\n<li>\\n<p><strong>HTTP 方法</strong><br>\\n结合 HTTP 方法进行路由，如 GET <code>/api/products</code> 和 POST <code>/api/products</code> 可以路由到不同的处理逻辑。</p>\\n</li>\\n<li>\\n<p><strong>请求头</strong><br>\\n根据请求头中的特定字段进行路由，如根据 <code>Content-Type</code> 或自定义头进行路由。</p>\\n</li>\\n<li>\\n<p><strong>查询参数</strong><br>\\n根据 URL 中的查询参数进行路由。</p>\\n</li>\\n<li>\\n<p><strong>主机名</strong><br>\\n根据请求的主机名进行路由，支持多租户场景。</p>\\n</li>\\n</ol>","autoDesc":true}');export{h as comp,c as data};
