import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as r,o as c}from"./app-BcGQ-_EK.js";const a={};function n(i,e){return c(),t("div",null,[...e[0]||(e[0]=[r('<h2 id="第7章-docker-存储" tabindex="-1"><a class="header-anchor" href="#第7章-docker-存储"><span>第7章：Docker 存储</span></a></h2><h3 id="docker-存储概念-卷与绑定挂载" tabindex="-1"><a class="header-anchor" href="#docker-存储概念-卷与绑定挂载"><span>Docker 存储概念（卷与绑定挂载）</span></a></h3><p>数据持久化是容器化应用的重要需求。Docker 提供了多种存储选项来满足不同的数据管理需求。在这一章中，我们将深入探讨 Docker 的存储机制，包括卷（Volumes）、绑定挂载（Bind Mounts）和临时文件系统（tmpfs）的区别和使用场景。</p><h3 id="使用-docker-卷管理数据持久性" tabindex="-1"><a class="header-anchor" href="#使用-docker-卷管理数据持久性"><span>使用 Docker 卷管理数据持久性</span></a></h3><p>Docker 卷是推荐的数据持久化方式，它独立于容器生命周期，提供了更好的数据管理和备份恢复能力。我们将学习如何创建、管理和维护 Docker 卷，以及如何在不同容器间共享数据。</p><h3 id="数据卷的备份与恢复" tabindex="-1"><a class="header-anchor" href="#数据卷的备份与恢复"><span>数据卷的备份与恢复</span></a></h3><p>数据的安全性和可恢复性是生产环境中的关键考虑因素。我们将详细介绍如何备份和恢复 Docker 卷中的数据，包括自动化备份策略和灾难恢复方案。</p><p>本章将通过理论讲解和实际示例，帮助您掌握 Docker 存储管理的核心概念和实践技巧，确保容器化应用的数据安全和持久性。</p>',8)])])}const d=o(a,[["render",n]]),m=JSON.parse('{"path":"/posts/container-docker/030-2-7-docker-storage.html","title":"Docker 存储","lang":"zh-CN","frontmatter":{"title":"Docker 存储","date":"2025-08-30T00:00:00.000Z","categories":["Docker"],"tags":["container-docker"],"published":true,"description":"第7章：Docker 存储 Docker 存储概念（卷与绑定挂载） 数据持久化是容器化应用的重要需求。Docker 提供了多种存储选项来满足不同的数据管理需求。在这一章中，我们将深入探讨 Docker 的存储机制，包括卷（Volumes）、绑定挂载（Bind Mounts）和临时文件系统（tmpfs）的区别和使用场景。 使用 Docker 卷管理数据持...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker 存储\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-30T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-07T09:05:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://houbb.github.io/blog-micro-service/posts/container-docker/030-2-7-docker-storage.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Docker 存储"}],["meta",{"property":"og:description","content":"第7章：Docker 存储 Docker 存储概念（卷与绑定挂载） 数据持久化是容器化应用的重要需求。Docker 提供了多种存储选项来满足不同的数据管理需求。在这一章中，我们将深入探讨 Docker 的存储机制，包括卷（Volumes）、绑定挂载（Bind Mounts）和临时文件系统（tmpfs）的区别和使用场景。 使用 Docker 卷管理数据持..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-07T09:05:07.000Z"}],["meta",{"property":"article:tag","content":"container-docker"}],["meta",{"property":"article:published_time","content":"2025-08-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-07T09:05:07.000Z"}]]},"git":{"createdTime":1756698707000,"updatedTime":1757235907000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":2},{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":2,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":1.05,"words":314},"filePathRelative":"posts/container-docker/030-2-7-docker-storage.md","excerpt":"<h2>第7章：Docker 存储</h2>\\n<h3>Docker 存储概念（卷与绑定挂载）</h3>\\n<p>数据持久化是容器化应用的重要需求。Docker 提供了多种存储选项来满足不同的数据管理需求。在这一章中，我们将深入探讨 Docker 的存储机制，包括卷（Volumes）、绑定挂载（Bind Mounts）和临时文件系统（tmpfs）的区别和使用场景。</p>\\n<h3>使用 Docker 卷管理数据持久性</h3>\\n<p>Docker 卷是推荐的数据持久化方式，它独立于容器生命周期，提供了更好的数据管理和备份恢复能力。我们将学习如何创建、管理和维护 Docker 卷，以及如何在不同容器间共享数据。</p>","autoDesc":true}');export{d as comp,m as data};
