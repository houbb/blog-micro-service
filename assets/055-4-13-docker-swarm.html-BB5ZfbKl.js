import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as o,o as t}from"./app-DAaD84tA.js";const c={};function n(m,e){return t(),a("div",null,[...e[0]||(e[0]=[o('<h2 id="第13章-docker-swarm" tabindex="-1"><a class="header-anchor" href="#第13章-docker-swarm"><span>第13章：Docker Swarm</span></a></h2><h3 id="什么是-docker-swarm" tabindex="-1"><a class="header-anchor" href="#什么是-docker-swarm"><span>什么是 Docker Swarm？</span></a></h3><p>Docker Swarm 是 Docker 原生的容器编排工具，它将多个 Docker 主机组成一个集群，并提供统一的管理界面。Swarm 模式使得用户可以轻松地部署和管理跨多个主机的应用服务，实现高可用性、负载均衡和自动故障恢复。</p><h3 id="docker-swarm-的集群架构与管理" tabindex="-1"><a class="header-anchor" href="#docker-swarm-的集群架构与管理"><span>Docker Swarm 的集群架构与管理</span></a></h3><p>在 Swarm 集群中，Docker 主机分为管理节点（Manager Nodes）和工作节点（Worker Nodes）。管理节点负责集群的管理和编排任务，而工作节点负责运行容器。Swarm 采用 Raft 共识算法确保管理节点之间的数据一致性。</p><h3 id="使用-docker-swarm-部署与管理服务" tabindex="-1"><a class="header-anchor" href="#使用-docker-swarm-部署与管理服务"><span>使用 Docker Swarm 部署与管理服务</span></a></h3><p>Swarm 允许用户以服务（Service）的形式定义应用，每个服务可以指定副本数量、网络配置、存储卷等。Swarm 会自动在集群中调度这些服务，确保按照用户定义的期望状态运行。</p><h3 id="高可用性与负载均衡" tabindex="-1"><a class="header-anchor" href="#高可用性与负载均衡"><span>高可用性与负载均衡</span></a></h3><p>Swarm 内置了高可用性和负载均衡机制。通过在多个节点上分布服务副本，Swarm 可以实现故障自动恢复和请求的负载分发，确保应用的稳定性和性能。</p><p>通过本章的学习，您将深入了解 Docker Swarm 的核心概念、集群管理、服务部署以及高可用性实现，为构建生产级的容器化应用奠定基础。</p>',10)])])}const p=r(c,[["render",n]]),d=JSON.parse('{"path":"/posts/container-docker/055-4-13-docker-swarm.html","title":"Docker Swarm - Container Orchestration Made Simple","lang":"zh-CN","frontmatter":{"title":"Docker Swarm - Container Orchestration Made Simple","date":"2025-08-31T00:00:00.000Z","categories":["Docker"],"tags":["container-docker"],"published":true,"description":"第13章：Docker Swarm 什么是 Docker Swarm？ Docker Swarm 是 Docker 原生的容器编排工具，它将多个 Docker 主机组成一个集群，并提供统一的管理界面。Swarm 模式使得用户可以轻松地部署和管理跨多个主机的应用服务，实现高可用性、负载均衡和自动故障恢复。 Docker Swarm 的集群架构与管理 在 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker Swarm - Container Orchestration Made Simple\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-31T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-07T09:05:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://houbb.github.io/blog-micro-service/posts/container-docker/055-4-13-docker-swarm.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Docker Swarm - Container Orchestration Made Simple"}],["meta",{"property":"og:description","content":"第13章：Docker Swarm 什么是 Docker Swarm？ Docker Swarm 是 Docker 原生的容器编排工具，它将多个 Docker 主机组成一个集群，并提供统一的管理界面。Swarm 模式使得用户可以轻松地部署和管理跨多个主机的应用服务，实现高可用性、负载均衡和自动故障恢复。 Docker Swarm 的集群架构与管理 在 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-07T09:05:07.000Z"}],["meta",{"property":"article:tag","content":"container-docker"}],["meta",{"property":"article:published_time","content":"2025-08-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-07T09:05:07.000Z"}]]},"git":{"createdTime":1756698707000,"updatedTime":1757235907000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":2},{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":2,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":1.29,"words":386},"filePathRelative":"posts/container-docker/055-4-13-docker-swarm.md","excerpt":"<h2>第13章：Docker Swarm</h2>\\n<h3>什么是 Docker Swarm？</h3>\\n<p>Docker Swarm 是 Docker 原生的容器编排工具，它将多个 Docker 主机组成一个集群，并提供统一的管理界面。Swarm 模式使得用户可以轻松地部署和管理跨多个主机的应用服务，实现高可用性、负载均衡和自动故障恢复。</p>\\n<h3>Docker Swarm 的集群架构与管理</h3>\\n<p>在 Swarm 集群中，Docker 主机分为管理节点（Manager Nodes）和工作节点（Worker Nodes）。管理节点负责集群的管理和编排任务，而工作节点负责运行容器。Swarm 采用 Raft 共识算法确保管理节点之间的数据一致性。</p>","autoDesc":true}');export{p as comp,d as data};
