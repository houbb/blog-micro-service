import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as n,o}from"./app-DAaD84tA.js";const a={};function c(s,e){return o(),r("div",null,[...e[0]||(e[0]=[n('<h2 id="第14章-kubernetes-与-docker" tabindex="-1"><a class="header-anchor" href="#第14章-kubernetes-与-docker"><span>第14章：Kubernetes 与 Docker</span></a></h2><h3 id="kubernetes-与-docker-的关系" tabindex="-1"><a class="header-anchor" href="#kubernetes-与-docker-的关系"><span>Kubernetes 与 Docker 的关系</span></a></h3><p>Kubernetes 和 Docker 是容器生态系统中两个重要的技术，它们之间有着密切的关系。Docker 负责容器的创建和运行，而 Kubernetes 负责容器的编排和管理。随着容器技术的发展，两者的集成越来越紧密，为现代应用的部署和管理提供了强大的支持。</p><h3 id="使用-kubernetes-管理-docker-容器" tabindex="-1"><a class="header-anchor" href="#使用-kubernetes-管理-docker-容器"><span>使用 Kubernetes 管理 Docker 容器</span></a></h3><p>Kubernetes 作为业界领先的容器编排平台，提供了丰富的功能来管理 Docker 容器。通过 Kubernetes，用户可以轻松地部署、扩展和管理跨多个主机的容器化应用，实现高可用性、负载均衡和自动故障恢复。</p><h3 id="部署与管理-docker-容器集群" tabindex="-1"><a class="header-anchor" href="#部署与管理-docker-容器集群"><span>部署与管理 Docker 容器集群</span></a></h3><p>Kubernetes 提供了完整的容器集群管理解决方案，包括服务发现、负载均衡、存储编排、自动扩展等功能。通过 Kubernetes，用户可以构建和管理大规模的容器化应用集群。</p><p>通过本章的学习，您将深入了解 Kubernetes 与 Docker 的关系，掌握如何使用 Kubernetes 管理 Docker 容器，以及如何部署和管理 Docker 容器集群。</p>',8)])])}const p=t(a,[["render",c]]),b=JSON.parse('{"path":"/posts/container-docker/059-4-14-kubernetes-and-docker.html","title":"Kubernetes and Docker - Container Orchestration at Scale","lang":"zh-CN","frontmatter":{"title":"Kubernetes and Docker - Container Orchestration at Scale","date":"2025-08-31T00:00:00.000Z","categories":["Docker"],"tags":["container-docker"],"published":true,"description":"第14章：Kubernetes 与 Docker Kubernetes 与 Docker 的关系 Kubernetes 和 Docker 是容器生态系统中两个重要的技术，它们之间有着密切的关系。Docker 负责容器的创建和运行，而 Kubernetes 负责容器的编排和管理。随着容器技术的发展，两者的集成越来越紧密，为现代应用的部署和管理提供了强大的...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kubernetes and Docker - Container Orchestration at Scale\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-31T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-07T09:05:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://houbb.github.io/blog-micro-service/posts/container-docker/059-4-14-kubernetes-and-docker.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Kubernetes and Docker - Container Orchestration at Scale"}],["meta",{"property":"og:description","content":"第14章：Kubernetes 与 Docker Kubernetes 与 Docker 的关系 Kubernetes 和 Docker 是容器生态系统中两个重要的技术，它们之间有着密切的关系。Docker 负责容器的创建和运行，而 Kubernetes 负责容器的编排和管理。随着容器技术的发展，两者的集成越来越紧密，为现代应用的部署和管理提供了强大的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-07T09:05:07.000Z"}],["meta",{"property":"article:tag","content":"container-docker"}],["meta",{"property":"article:published_time","content":"2025-08-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-07T09:05:07.000Z"}]]},"git":{"createdTime":1756698707000,"updatedTime":1757235907000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":2},{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":2,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":1.06,"words":318},"filePathRelative":"posts/container-docker/059-4-14-kubernetes-and-docker.md","excerpt":"<h2>第14章：Kubernetes 与 Docker</h2>\\n<h3>Kubernetes 与 Docker 的关系</h3>\\n<p>Kubernetes 和 Docker 是容器生态系统中两个重要的技术，它们之间有着密切的关系。Docker 负责容器的创建和运行，而 Kubernetes 负责容器的编排和管理。随着容器技术的发展，两者的集成越来越紧密，为现代应用的部署和管理提供了强大的支持。</p>\\n<h3>使用 Kubernetes 管理 Docker 容器</h3>\\n<p>Kubernetes 作为业界领先的容器编排平台，提供了丰富的功能来管理 Docker 容器。通过 Kubernetes，用户可以轻松地部署、扩展和管理跨多个主机的容器化应用，实现高可用性、负载均衡和自动故障恢复。</p>","autoDesc":true}');export{p as comp,b as data};
