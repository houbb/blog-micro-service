import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as e}from"./app-BS2-Vf28.js";const l={};function t(h,s){return e(),a("div",null,[...s[0]||(s[0]=[n(`<h2 id="docker-引擎与容器" tabindex="-1"><a class="header-anchor" href="#docker-引擎与容器"><span>Docker 引擎与容器</span></a></h2><h3 id="docker-引擎架构详解" tabindex="-1"><a class="header-anchor" href="#docker-引擎架构详解"><span>Docker 引擎架构详解</span></a></h3><p>Docker 引擎是 Docker 平台的核心，它是一个轻量级的容器化技术运行时环境。Docker 引擎采用客户端-服务器（C/S）架构，包含多个组件协同工作。</p><h4 id="核心组件" tabindex="-1"><a class="header-anchor" href="#核心组件"><span>核心组件</span></a></h4><p><strong>Docker Daemon（dockerd）</strong><br> Docker Daemon 是在宿主机后台运行的守护进程，负责管理 Docker 对象，如镜像、容器、网络和卷等。它监听 Docker API 请求并处理这些请求。</p><p>Daemon 还负责以下任务：</p><ul><li>构建、运行和分发 Docker 容器</li><li>管理容器的生命周期</li><li>管理网络和存储资源</li><li>与容器运行时交互</li></ul><p><strong>Docker Client（docker）</strong><br> Docker Client 是用户与 Docker 交互的主要方式。当用户运行 <code>docker</code> 命令时，实际上是 Docker Client 在向 Docker Daemon 发送请求。</p><p>Client 可以与多个 Daemon 通信，这使得用户能够管理多个 Docker 主机。</p><p><strong>Docker API</strong><br> Docker API 是 REST API，允许程序与 Docker Daemon 进行交互。许多 Docker 工具和第三方集成都是通过这个 API 实现的。</p><h4 id="架构图解" tabindex="-1"><a class="header-anchor" href="#架构图解"><span>架构图解</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>+------------------+     +------------------+     +------------------+</span></span>
<span class="line"><span>|   Docker Client  |     |   Docker Client  |     |   Docker Client  |</span></span>
<span class="line"><span>+------------------+     +------------------+     +------------------+</span></span>
<span class="line"><span>          |                        |                        |</span></span>
<span class="line"><span>          |         HTTP/HTTPS     |                        |</span></span>
<span class="line"><span>          +------------------------+------------------------+</span></span>
<span class="line"><span>                                   |</span></span>
<span class="line"><span>                          +--------v--------+</span></span>
<span class="line"><span>                          |  Docker Daemon  |</span></span>
<span class="line"><span>                          |   (dockerd)     |</span></span>
<span class="line"><span>                          +--------+--------+</span></span>
<span class="line"><span>                                   |</span></span>
<span class="line"><span>                    +--------------+--------------+</span></span>
<span class="line"><span>                    |              |              |</span></span>
<span class="line"><span>            +-------v------+ +-----v-----+ +-----v-----+</span></span>
<span class="line"><span>            | Container(s) | |  Image(s) | | Network(s)|</span></span>
<span class="line"><span>            +--------------+ +-----------+ +-----------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="容器技术深入解析" tabindex="-1"><a class="header-anchor" href="#容器技术深入解析"><span>容器技术深入解析</span></a></h3><p>容器是 Docker 的核心概念，它提供了应用程序运行的隔离环境。</p><h4 id="容器的本质" tabindex="-1"><a class="header-anchor" href="#容器的本质"><span>容器的本质</span></a></h4><p>容器是镜像的运行实例。可以将镜像看作是类（Class），容器则是对象（Object）。容器包含了应用程序运行所需的所有依赖和配置，但与虚拟机不同，它共享宿主机的操作系统内核。</p><h4 id="容器的隔离机制" tabindex="-1"><a class="header-anchor" href="#容器的隔离机制"><span>容器的隔离机制</span></a></h4><p>Docker 使用 Linux 内核的以下特性实现容器隔离：</p><p><strong>命名空间（Namespaces）</strong><br> 命名空间为容器提供了隔离的工作环境。Docker 使用以下命名空间：</p><ul><li><strong>PID</strong>：进程隔离</li><li><strong>NET</strong>：网络隔离</li><li><strong>IPC</strong>：进程间通信隔离</li><li><strong>MNT</strong>：文件系统挂载点隔离</li><li><strong>UTS</strong>：主机名和域名隔离</li></ul><p><strong>控制组（Cgroups）</strong><br> 控制组限制和监控容器的资源使用，包括 CPU、内存、磁盘 I/O 等。</p><h4 id="容器生命周期" tabindex="-1"><a class="header-anchor" href="#容器生命周期"><span>容器生命周期</span></a></h4><p>容器的生命周期包括以下状态：</p><ol><li><strong>Created</strong>：容器已创建但未启动</li><li><strong>Running</strong>：容器正在运行</li><li><strong>Paused</strong>：容器已暂停</li><li><strong>Stopped</strong>：容器已停止</li><li><strong>Deleted</strong>：容器已删除</li></ol><h4 id="容器与虚拟机的区别" tabindex="-1"><a class="header-anchor" href="#容器与虚拟机的区别"><span>容器与虚拟机的区别</span></a></h4><table><thead><tr><th>特性</th><th>容器</th><th>虚拟机</th></tr></thead><tbody><tr><td>启动时间</td><td>秒级</td><td>分钟级</td></tr><tr><td>硬盘使用</td><td>一般为 MB</td><td>一般为 GB</td></tr><tr><td>性能</td><td>接近原生</td><td>较慢</td></tr><tr><td>系统资源</td><td>占用少</td><td>占用多</td></tr><tr><td>隔离性</td><td>进程级</td><td>操作系统级</td></tr></tbody></table><h3 id="docker-daemon-详解" tabindex="-1"><a class="header-anchor" href="#docker-daemon-详解"><span>Docker Daemon 详解</span></a></h3><h4 id="启动和配置" tabindex="-1"><a class="header-anchor" href="#启动和配置"><span>启动和配置</span></a></h4><p>Docker Daemon 可以通过多种方式启动和配置：</p><p><strong>系统服务方式</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动 Docker 服务</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置开机自启</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> enable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看服务状态</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>手动启动方式</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 手动启动 Docker Daemon</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dockerd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定配置文件启动</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dockerd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --config-file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/docker/daemon.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置选项" tabindex="-1"><a class="header-anchor" href="#配置选项"><span>配置选项</span></a></h4><p>Docker Daemon 支持丰富的配置选项，可以通过配置文件或命令行参数指定：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;debug&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;tls&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;tlscert&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/var/docker/server.pem&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;tlskey&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/var/docker/serverkey.pem&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;hosts&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;tcp://0.0.0.0:2376&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="日志管理" tabindex="-1"><a class="header-anchor" href="#日志管理"><span>日志管理</span></a></h4><p>Docker Daemon 会产生日志，可以通过以下方式查看：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看 Docker Daemon 日志</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> journalctl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker.service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 实时查看日志</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> journalctl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker.service</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="docker-client-详解" tabindex="-1"><a class="header-anchor" href="#docker-client-详解"><span>Docker Client 详解</span></a></h3><h4 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法"><span>基本用法</span></a></h4><p>Docker Client 是用户与 Docker 交互的主要界面：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看 Docker 版本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看 Docker 系统信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> info</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看帮助信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="环境变量配置" tabindex="-1"><a class="header-anchor" href="#环境变量配置"><span>环境变量配置</span></a></h4><p>Docker Client 支持通过环境变量配置连接参数：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置 Docker Host</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> DOCKER_HOST</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tcp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">://</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">localhost</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">2376</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置 TLS 配置</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> DOCKER_TLS_VERIFY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> DOCKER_CERT_PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">to</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">certs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="远程管理" tabindex="-1"><a class="header-anchor" href="#远程管理"><span>远程管理</span></a></h4><p>Docker Client 可以管理远程的 Docker Daemon：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 管理远程 Docker 主机</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tcp://remote-host:2376</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用环境变量管理远程主机</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> DOCKER_HOST</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tcp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">://</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">remote-host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">2376</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="容器运行时" tabindex="-1"><a class="header-anchor" href="#容器运行时"><span>容器运行时</span></a></h3><p>Docker 支持多种容器运行时，通过容器运行时接口（CRI）与底层系统交互。</p><h4 id="默认运行时" tabindex="-1"><a class="header-anchor" href="#默认运行时"><span>默认运行时</span></a></h4><p>Docker 默认使用 containerd 作为容器运行时：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>+------------------+     +------------------+</span></span>
<span class="line"><span>|   Docker Client  |     |  Third-party CLI |</span></span>
<span class="line"><span>+------------------+     +------------------+</span></span>
<span class="line"><span>          |                        |</span></span>
<span class="line"><span>          +------------------------+</span></span>
<span class="line"><span>                   |</span></span>
<span class="line"><span>          +--------v--------+</span></span>
<span class="line"><span>          |  Docker Daemon  |</span></span>
<span class="line"><span>          +--------+--------+</span></span>
<span class="line"><span>                   |</span></span>
<span class="line"><span>          +--------v--------+</span></span>
<span class="line"><span>          |    containerd   |</span></span>
<span class="line"><span>          +--------+--------+</span></span>
<span class="line"><span>                   |</span></span>
<span class="line"><span>          +--------v--------+</span></span>
<span class="line"><span>          |      runc       |</span></span>
<span class="line"><span>          +-----------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="运行时选择" tabindex="-1"><a class="header-anchor" href="#运行时选择"><span>运行时选择</span></a></h4><p>用户可以根据需要选择不同的容器运行时：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用不同的运行时运行容器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --runtime=io.containerd.runc.v2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="容器编排与管理" tabindex="-1"><a class="header-anchor" href="#容器编排与管理"><span>容器编排与管理</span></a></h3><p>虽然 Docker 引擎本身主要用于单机容器管理，但它为更高级的容器编排提供了基础。</p><h4 id="docker-compose" tabindex="-1"><a class="header-anchor" href="#docker-compose"><span>Docker Compose</span></a></h4><p>Docker Compose 是 Docker 官方的多容器编排工具：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;3.8&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  web</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nginx</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;80:80&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  db</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mysql:8.0</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    environment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      MYSQL_ROOT_PASSWORD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">password</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="docker-swarm" tabindex="-1"><a class="header-anchor" href="#docker-swarm"><span>Docker Swarm</span></a></h4><p>Docker Swarm 是 Docker 原生的集群管理工具：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 初始化 Swarm 集群</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> swarm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 加入 Swarm 集群</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> swarm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> join</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --token</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> TOKEN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MANAGER-IP:2377</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安全性考虑" tabindex="-1"><a class="header-anchor" href="#安全性考虑"><span>安全性考虑</span></a></h3><p>Docker 引擎在设计时考虑了安全性：</p><h4 id="守护进程安全" tabindex="-1"><a class="header-anchor" href="#守护进程安全"><span>守护进程安全</span></a></h4><ul><li>默认只监听本地 Unix 套接字</li><li>支持 TLS 加密通信</li><li>支持用户命名空间映射</li></ul><h4 id="容器安全" tabindex="-1"><a class="header-anchor" href="#容器安全"><span>容器安全</span></a></h4><ul><li>默认以非 root 用户运行</li><li>支持能力（Capabilities）限制</li><li>支持 SELinux/AppArmor 安全策略</li></ul><h3 id="性能优化" tabindex="-1"><a class="header-anchor" href="#性能优化"><span>性能优化</span></a></h3><p>为了获得最佳性能，可以对 Docker 引擎进行优化：</p><h4 id="存储驱动选择" tabindex="-1"><a class="header-anchor" href="#存储驱动选择"><span>存储驱动选择</span></a></h4><p>根据文件系统选择合适的存储驱动：</p><ul><li><strong>overlay2</strong>：推荐用于 ext4 和 xfs</li><li><strong>fuse-overlayfs</strong>：用于 rootless 模式</li><li><strong>btrfs</strong>：用于 Btrfs 文件系统</li></ul><h4 id="日志配置" tabindex="-1"><a class="header-anchor" href="#日志配置"><span>日志配置</span></a></h4><p>合理配置日志轮转避免磁盘空间耗尽：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;log-driver&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;json-file&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;log-opts&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;max-size&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;10m&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;max-file&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;3&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="故障排除" tabindex="-1"><a class="header-anchor" href="#故障排除"><span>故障排除</span></a></h3><h4 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h4><ol><li><p><strong>Docker Daemon 无法启动</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 检查配置文件语法</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dockerd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --validate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看详细日志</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dockerd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --debug</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>权限问题</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将用户添加到 docker 组</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> usermod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -aG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $USER</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>网络问题</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 重置 Docker 网络</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>通过本节内容，我们深入探讨了 Docker 引擎的架构和容器技术的核心原理。理解这些概念对于有效使用 Docker 和解决相关问题至关重要。</p>`,83)])])}const d=i(l,[["render",t]]),k=JSON.parse('{"path":"/posts/container-docker/1-3-1-docker-engine-and-containers.html","title":"Docker Engine and Containers - Understanding the Core Components","lang":"zh-CN","frontmatter":{"title":"Docker Engine and Containers - Understanding the Core Components","date":"2025-08-30T00:00:00.000Z","categories":["Docker"],"tags":["container-docker"],"published":true,"description":"Docker 引擎与容器 Docker 引擎架构详解 Docker 引擎是 Docker 平台的核心，它是一个轻量级的容器化技术运行时环境。Docker 引擎采用客户端-服务器（C/S）架构，包含多个组件协同工作。 核心组件 Docker Daemon（dockerd） Docker Daemon 是在宿主机后台运行的守护进程，负责管理 Docker ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker Engine and Containers - Understanding the Core Components\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-30T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-01T13:27:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://houbb.github.io/blog-micro-service/posts/container-docker/1-3-1-docker-engine-and-containers.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Docker Engine and Containers - Understanding the Core Components"}],["meta",{"property":"og:description","content":"Docker 引擎与容器 Docker 引擎架构详解 Docker 引擎是 Docker 平台的核心，它是一个轻量级的容器化技术运行时环境。Docker 引擎采用客户端-服务器（C/S）架构，包含多个组件协同工作。 核心组件 Docker Daemon（dockerd） Docker Daemon 是在宿主机后台运行的守护进程，负责管理 Docker ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-01T13:27:06.000Z"}],["meta",{"property":"article:tag","content":"container-docker"}],["meta",{"property":"article:published_time","content":"2025-08-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-01T13:27:06.000Z"}]]},"git":{"createdTime":1756698707000,"updatedTime":1756733226000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":2},{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":1,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":4.95,"words":1485},"filePathRelative":"posts/container-docker/1-3-1-docker-engine-and-containers.md","excerpt":"<h2>Docker 引擎与容器</h2>\\n<h3>Docker 引擎架构详解</h3>\\n<p>Docker 引擎是 Docker 平台的核心，它是一个轻量级的容器化技术运行时环境。Docker 引擎采用客户端-服务器（C/S）架构，包含多个组件协同工作。</p>\\n<h4>核心组件</h4>\\n<p><strong>Docker Daemon（dockerd）</strong><br>\\nDocker Daemon 是在宿主机后台运行的守护进程，负责管理 Docker 对象，如镜像、容器、网络和卷等。它监听 Docker API 请求并处理这些请求。</p>\\n<p>Daemon 还负责以下任务：</p>","autoDesc":true}');export{d as comp,k as data};
