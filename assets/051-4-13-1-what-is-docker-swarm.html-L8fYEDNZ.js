import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as s,o as r}from"./app-DAaD84tA.js";const l={};function n(t,i){return r(),e("div",null,[...i[0]||(i[0]=[s(`<h2 id="什么是-docker-swarm" tabindex="-1"><a class="header-anchor" href="#什么是-docker-swarm"><span>什么是 Docker Swarm？</span></a></h2><h3 id="docker-swarm-简介" tabindex="-1"><a class="header-anchor" href="#docker-swarm-简介"><span>Docker Swarm 简介</span></a></h3><p>Docker Swarm 是 Docker 原生的容器编排和集群管理工具。它将多个 Docker 主机整合成一个虚拟的 Docker 主机，使得用户可以在集群级别上部署和管理容器化应用。Swarm 模式在 Docker 1.12 版本中被集成到 Docker Engine 中，成为 Docker 生态系统的重要组成部分。</p><h3 id="swarm-的核心概念" tabindex="-1"><a class="header-anchor" href="#swarm-的核心概念"><span>Swarm 的核心概念</span></a></h3><h4 id="节点-nodes" tabindex="-1"><a class="header-anchor" href="#节点-nodes"><span>节点（Nodes）</span></a></h4><p>在 Swarm 集群中，有两种类型的节点：</p><ol><li><p><strong>管理节点（Manager Nodes）</strong>：</p><ul><li>负责集群管理和编排任务</li><li>维护集群状态</li><li>调度服务任务</li><li>执行集群管理操作</li></ul></li><li><p><strong>工作节点（Worker Nodes）</strong>：</p><ul><li>运行容器任务</li><li>向管理节点报告状态</li><li>执行管理节点分配的任务</li></ul></li></ol><h4 id="服务-services" tabindex="-1"><a class="header-anchor" href="#服务-services"><span>服务（Services）</span></a></h4><p>服务是 Swarm 中的核心概念，定义了在集群中运行的任务。每个服务包含：</p><ul><li>服务定义（镜像、命令、环境变量等）</li><li>副本数量</li><li>网络和存储配置</li><li>更新策略</li></ul><h4 id="任务-tasks" tabindex="-1"><a class="header-anchor" href="#任务-tasks"><span>任务（Tasks）</span></a></h4><p>任务是 Swarm 的调度单元，每个任务包含一个容器及其运行所需的所有信息。Swarm 确保按照服务定义创建和维护指定数量的任务。</p><h3 id="swarm-架构" tabindex="-1"><a class="header-anchor" href="#swarm-架构"><span>Swarm 架构</span></a></h3><p>Swarm 采用基于 Raft 共识算法的分布式架构：</p><ol><li><p><strong>Raft 集群</strong>：</p><ul><li>管理节点组成 Raft 集群</li><li>确保集群状态的一致性</li><li>实现高可用性</li></ul></li><li><p><strong>分布式存储</strong>：</p><ul><li>集群状态存储在所有管理节点上</li><li>使用 Raft 算法保证数据一致性</li></ul></li><li><p><strong>负载均衡</strong>：</p><ul><li>内置 DNS 组件实现服务发现</li><li>自动负载均衡</li></ul></li></ol><h3 id="swarm-与-kubernetes-的比较" tabindex="-1"><a class="header-anchor" href="#swarm-与-kubernetes-的比较"><span>Swarm 与 Kubernetes 的比较</span></a></h3><p>虽然 Kubernetes 是目前最流行的容器编排工具，但 Swarm 有其独特优势：</p><ol><li><p><strong>简单性</strong>：</p><ul><li>与 Docker Engine 深度集成</li><li>学习曲线平缓</li><li>配置简单</li></ul></li><li><p><strong>原生集成</strong>：</p><ul><li>使用标准 Docker API 和 CLI</li><li>无需额外工具</li></ul></li><li><p><strong>快速部署</strong>：</p><ul><li>启动速度快</li><li>配置简单</li></ul></li></ol><h3 id="swarm-的适用场景" tabindex="-1"><a class="header-anchor" href="#swarm-的适用场景"><span>Swarm 的适用场景</span></a></h3><ol><li><p><strong>中小型部署</strong>：</p><ul><li>适合不需要复杂编排功能的场景</li><li>简单的多主机部署</li></ul></li><li><p><strong>现有 Docker 环境</strong>：</p><ul><li>已经使用 Docker 的团队</li><li>希望最小化学习成本</li></ul></li><li><p><strong>快速原型开发</strong>：</p><ul><li>需要快速搭建集群环境</li><li>测试和验证应用</li></ul></li></ol><h3 id="swarm-的局限性" tabindex="-1"><a class="header-anchor" href="#swarm-的局限性"><span>Swarm 的局限性</span></a></h3><ol><li><p><strong>功能相对简单</strong>：</p><ul><li>相比 Kubernetes 功能较少</li><li>缺少一些高级特性</li></ul></li><li><p><strong>生态系统</strong>：</p><ul><li>社区和第三方工具相对较少</li><li>企业级功能有限</li></ul></li></ol><h3 id="启用-swarm-模式" tabindex="-1"><a class="header-anchor" href="#启用-swarm-模式"><span>启用 Swarm 模式</span></a></h3><p>启用 Swarm 模式非常简单：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 初始化 Swarm 集群</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> swarm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --advertise-addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">MANAGER-I</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">P&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加工作节点</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> swarm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> join</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --token</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">TOKE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">N&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">MANAGER-I</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">P&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:2377</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过本节内容，我们深入了解了 Docker Swarm 的基本概念、架构和特点。Swarm 作为 Docker 原生的编排工具，为需要简单、快速集群管理的场景提供了理想的解决方案。</p>`,26)])])}const p=a(l,[["render",n]]),c=JSON.parse(`{"path":"/posts/container-docker/051-4-13-1-what-is-docker-swarm.html","title":"What is Docker Swarm - Understanding Docker's Native Orchestration Tool","lang":"zh-CN","frontmatter":{"title":"What is Docker Swarm - Understanding Docker's Native Orchestration Tool","date":"2025-08-31T00:00:00.000Z","categories":["Docker"],"tags":["container-docker"],"published":true,"description":"什么是 Docker Swarm？ Docker Swarm 简介 Docker Swarm 是 Docker 原生的容器编排和集群管理工具。它将多个 Docker 主机整合成一个虚拟的 Docker 主机，使得用户可以在集群级别上部署和管理容器化应用。Swarm 模式在 Docker 1.12 版本中被集成到 Docker Engine 中，成为 D...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"What is Docker Swarm - Understanding Docker's Native Orchestration Tool\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-31T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-07T09:05:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://houbb.github.io/blog-micro-service/posts/container-docker/051-4-13-1-what-is-docker-swarm.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"What is Docker Swarm - Understanding Docker's Native Orchestration Tool"}],["meta",{"property":"og:description","content":"什么是 Docker Swarm？ Docker Swarm 简介 Docker Swarm 是 Docker 原生的容器编排和集群管理工具。它将多个 Docker 主机整合成一个虚拟的 Docker 主机，使得用户可以在集群级别上部署和管理容器化应用。Swarm 模式在 Docker 1.12 版本中被集成到 Docker Engine 中，成为 D..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-07T09:05:07.000Z"}],["meta",{"property":"article:tag","content":"container-docker"}],["meta",{"property":"article:published_time","content":"2025-08-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-07T09:05:07.000Z"}]]},"git":{"createdTime":1756698707000,"updatedTime":1757235907000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":2},{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":2,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":2.48,"words":745},"filePathRelative":"posts/container-docker/051-4-13-1-what-is-docker-swarm.md","excerpt":"<h2>什么是 Docker Swarm？</h2>\\n<h3>Docker Swarm 简介</h3>\\n<p>Docker Swarm 是 Docker 原生的容器编排和集群管理工具。它将多个 Docker 主机整合成一个虚拟的 Docker 主机，使得用户可以在集群级别上部署和管理容器化应用。Swarm 模式在 Docker 1.12 版本中被集成到 Docker Engine 中，成为 Docker 生态系统的重要组成部分。</p>\\n<h3>Swarm 的核心概念</h3>\\n<h4>节点（Nodes）</h4>\\n<p>在 Swarm 集群中，有两种类型的节点：</p>\\n<ol>\\n<li>\\n<p><strong>管理节点（Manager Nodes）</strong>：</p>\\n<ul>\\n<li>负责集群管理和编排任务</li>\\n<li>维护集群状态</li>\\n<li>调度服务任务</li>\\n<li>执行集群管理操作</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>工作节点（Worker Nodes）</strong>：</p>\\n<ul>\\n<li>运行容器任务</li>\\n<li>向管理节点报告状态</li>\\n<li>执行管理节点分配的任务</li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}`);export{p as comp,c as data};
