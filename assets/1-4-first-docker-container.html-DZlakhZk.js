import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as r,o as c}from"./app-DjwXz1dH.js";const a={};function n(i,e){return c(),t("div",null,[...e[0]||(e[0]=[r('<h2 id="第4章-第一个-docker-容器" tabindex="-1"><a class="header-anchor" href="#第4章-第一个-docker-容器"><span>第4章：第一个 Docker 容器</span></a></h2><h3 id="创建与运行第一个容器" tabindex="-1"><a class="header-anchor" href="#创建与运行第一个容器"><span>创建与运行第一个容器</span></a></h3><p>在掌握了 Docker 的基本概念和安装配置之后，现在是时候创建和运行您的第一个 Docker 容器了。这一章将引导您完成从创建简单容器到理解容器生命周期的全过程。</p><p>我们将从最基础的命令开始，逐步深入到容器的高级管理技巧。通过实际操作，您将学会如何有效地使用 Docker 来运行应用程序。</p><h3 id="容器的生命周期-启动、停止、重启" tabindex="-1"><a class="header-anchor" href="#容器的生命周期-启动、停止、重启"><span>容器的生命周期（启动、停止、重启）</span></a></h3><p>理解容器的生命周期对于有效管理容器至关重要。容器可以处于多种状态，包括创建、运行、暂停、停止等。我们将详细探讨每种状态的特点以及如何在不同状态之间转换。</p><h3 id="常用的-docker-命令-docker-run-docker-ps-docker-stop" tabindex="-1"><a class="header-anchor" href="#常用的-docker-命令-docker-run-docker-ps-docker-stop"><span>常用的 Docker 命令（<code>docker run</code>, <code>docker ps</code>, <code>docker stop</code>）</span></a></h3><p>Docker 提供了丰富的命令来管理容器。在这一章中，我们将重点介绍最常用的几个命令，包括如何运行容器、查看容器状态以及控制容器的生命周期。</p><p>本章将通过实际示例和练习，帮助您建立对 Docker 容器操作的直观理解，为后续更复杂的应用打下坚实基础。</p>',9)])])}const d=o(a,[["render",n]]),h=JSON.parse('{"path":"/posts/container-docker/1-4-first-docker-container.html","title":"第一个 Docker 容器","lang":"zh-CN","frontmatter":{"title":"第一个 Docker 容器","date":"2025-08-30T00:00:00.000Z","categories":["Docker"],"tags":["container-docker"],"published":true,"description":"第4章：第一个 Docker 容器 创建与运行第一个容器 在掌握了 Docker 的基本概念和安装配置之后，现在是时候创建和运行您的第一个 Docker 容器了。这一章将引导您完成从创建简单容器到理解容器生命周期的全过程。 我们将从最基础的命令开始，逐步深入到容器的高级管理技巧。通过实际操作，您将学会如何有效地使用 Docker 来运行应用程序。 容器...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第一个 Docker 容器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-30T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-01T13:27:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://houbb.github.io/blog-micro-service/posts/container-docker/1-4-first-docker-container.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"第一个 Docker 容器"}],["meta",{"property":"og:description","content":"第4章：第一个 Docker 容器 创建与运行第一个容器 在掌握了 Docker 的基本概念和安装配置之后，现在是时候创建和运行您的第一个 Docker 容器了。这一章将引导您完成从创建简单容器到理解容器生命周期的全过程。 我们将从最基础的命令开始，逐步深入到容器的高级管理技巧。通过实际操作，您将学会如何有效地使用 Docker 来运行应用程序。 容器..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-01T13:27:06.000Z"}],["meta",{"property":"article:tag","content":"container-docker"}],["meta",{"property":"article:published_time","content":"2025-08-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-01T13:27:06.000Z"}]]},"git":{"createdTime":1756698707000,"updatedTime":1756733226000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":2},{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":1,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":1.16,"words":349},"filePathRelative":"posts/container-docker/1-4-first-docker-container.md","excerpt":"<h2>第4章：第一个 Docker 容器</h2>\\n<h3>创建与运行第一个容器</h3>\\n<p>在掌握了 Docker 的基本概念和安装配置之后，现在是时候创建和运行您的第一个 Docker 容器了。这一章将引导您完成从创建简单容器到理解容器生命周期的全过程。</p>\\n<p>我们将从最基础的命令开始，逐步深入到容器的高级管理技巧。通过实际操作，您将学会如何有效地使用 Docker 来运行应用程序。</p>\\n<h3>容器的生命周期（启动、停止、重启）</h3>\\n<p>理解容器的生命周期对于有效管理容器至关重要。容器可以处于多种状态，包括创建、运行、暂停、停止等。我们将详细探讨每种状态的特点以及如何在不同状态之间转换。</p>","autoDesc":true}');export{d as comp,h as data};
