import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as l}from"./app-DjwXz1dH.js";const e={};function t(h,s){return l(),a("div",null,[...s[0]||(s[0]=[n(`<h2 id="docker-桌面版与命令行工具" tabindex="-1"><a class="header-anchor" href="#docker-桌面版与命令行工具"><span>Docker 桌面版与命令行工具</span></a></h2><h3 id="docker-desktop-概述" tabindex="-1"><a class="header-anchor" href="#docker-desktop-概述"><span>Docker Desktop 概述</span></a></h3><p>Docker Desktop 是 Docker 官方提供的桌面应用程序，为 Windows 和 macOS 用户提供了一体化的 Docker 开发环境。它不仅包含了 Docker Engine，还集成了 Kubernetes、Docker Compose 等工具，并提供了直观的图形用户界面。</p><h4 id="核心组件" tabindex="-1"><a class="header-anchor" href="#核心组件"><span>核心组件</span></a></h4><p>Docker Desktop 包含以下核心组件：</p><ol><li><strong>Docker Engine</strong>：容器运行时环境</li><li><strong>Docker Compose</strong>：多容器应用编排工具</li><li><strong>Kubernetes</strong>：容器编排平台（可选）</li><li><strong>Docker CLI</strong>：命令行接口工具</li><li><strong>图形用户界面</strong>：系统托盘图标和设置界面</li></ol><h4 id="系统集成" tabindex="-1"><a class="header-anchor" href="#系统集成"><span>系统集成</span></a></h4><p>Docker Desktop 与操作系统深度集成：</p><ul><li><strong>自动启动</strong>：可以配置为系统启动时自动运行</li><li><strong>系统托盘</strong>：提供快速访问和状态监控</li><li><strong>菜单栏集成</strong>（macOS）：在菜单栏中显示 Docker 状态</li><li><strong>通知系统</strong>：重要事件的通知提醒</li></ul><h3 id="docker-命令行工具-cli" tabindex="-1"><a class="header-anchor" href="#docker-命令行工具-cli"><span>Docker 命令行工具（CLI）</span></a></h3><p>Docker CLI 是与 Docker Daemon 交互的主要方式，它提供了完整的命令集来管理 Docker 对象，包括镜像、容器、网络、卷等。</p><h4 id="基本命令结构" tabindex="-1"><a class="header-anchor" href="#基本命令结构"><span>基本命令结构</span></a></h4><p>Docker CLI 命令遵循统一的结构：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [OPTIONS] COMMAND [ARG...]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中：</p><ul><li><code>OPTIONS</code>：全局选项</li><li><code>COMMAND</code>：具体命令</li><li><code>ARG</code>：命令参数</li></ul><h4 id="主要命令分类" tabindex="-1"><a class="header-anchor" href="#主要命令分类"><span>主要命令分类</span></a></h4><p>Docker CLI 命令可以分为以下几类：</p><ol><li><strong>镜像管理</strong>：build, pull, push, images, rmi</li><li><strong>容器管理</strong>：run, start, stop, restart, rm, ps</li><li><strong>网络管理</strong>：network create, network ls, network rm</li><li><strong>卷管理</strong>：volume create, volume ls, volume rm</li><li><strong>系统管理</strong>：info, version, system prune</li></ol><h3 id="图形界面与命令行的对比" tabindex="-1"><a class="header-anchor" href="#图形界面与命令行的对比"><span>图形界面与命令行的对比</span></a></h3><h4 id="用户体验对比" tabindex="-1"><a class="header-anchor" href="#用户体验对比"><span>用户体验对比</span></a></h4><table><thead><tr><th>特性</th><th>Docker Desktop</th><th>Docker CLI</th></tr></thead><tbody><tr><td>学习曲线</td><td>平缓</td><td>陡峭</td></tr><tr><td>操作直观性</td><td>高</td><td>低</td></tr><tr><td>功能完整性</td><td>高</td><td>最高</td></tr><tr><td>自动化支持</td><td>有限</td><td>强大</td></tr><tr><td>资源消耗</td><td>较高</td><td>较低</td></tr></tbody></table><h4 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景"><span>适用场景</span></a></h4><p><strong>Docker Desktop 适用于：</strong></p><ol><li><strong>初学者</strong>：图形界面降低了学习门槛</li><li><strong>开发人员</strong>：快速查看和管理容器状态</li><li><strong>演示场景</strong>：直观展示 Docker 功能</li><li><strong>轻量级使用</strong>：不需要复杂操作的场景</li></ol><p><strong>Docker CLI 适用于：</strong></p><ol><li><strong>专业开发人员</strong>：需要精细控制和自动化</li><li><strong>运维人员</strong>：批量管理和脚本化操作</li><li><strong>CI/CD 流水线</strong>：自动化构建和部署</li><li><strong>远程服务器管理</strong>：通过 SSH 管理远程 Docker 主机</li></ol><h3 id="docker-desktop-功能详解" tabindex="-1"><a class="header-anchor" href="#docker-desktop-功能详解"><span>Docker Desktop 功能详解</span></a></h3><h4 id="系统托盘界面" tabindex="-1"><a class="header-anchor" href="#系统托盘界面"><span>系统托盘界面</span></a></h4><p>Docker Desktop 在系统托盘（Windows）或菜单栏（macOS）中提供了一个简洁的界面：</p><ol><li><strong>状态指示</strong>：显示 Docker 是否正在运行</li><li><strong>快速操作</strong>：启动、停止、重启 Docker</li><li><strong>资源监控</strong>：查看 CPU 和内存使用情况</li><li><strong>快捷访问</strong>：快速打开设置和文档</li></ol><h4 id="设置界面" tabindex="-1"><a class="header-anchor" href="#设置界面"><span>设置界面</span></a></h4><p>Docker Desktop 提供了丰富的设置选项：</p><p><strong>Resources（资源）</strong></p><ul><li><strong>Memory</strong>：分配给 Docker 的内存大小</li><li><strong>CPUs</strong>：分配给 Docker 的 CPU 核心数</li><li><strong>Disk Image Size</strong>：Docker 磁盘镜像大小</li></ul><p><strong>File Sharing（文件共享）</strong></p><ul><li>配置哪些本地目录可以挂载到容器中</li><li>在 Windows 上特别重要，因为需要明确指定共享目录</li></ul><p><strong>Network（网络）</strong></p><ul><li>配置 Docker 的网络设置</li><li>设置代理服务器</li></ul><p><strong>Kubernetes</strong></p><ul><li>启用/禁用内置 Kubernetes 集群</li><li>配置 Kubernetes 设置</li></ul><h4 id="dashboard-仪表板" tabindex="-1"><a class="header-anchor" href="#dashboard-仪表板"><span>Dashboard（仪表板）</span></a></h4><p>Docker Desktop 的仪表板提供了容器和镜像的可视化管理：</p><ol><li><strong>Containers</strong>：显示正在运行的容器列表</li><li><strong>Images</strong>：显示本地镜像列表</li><li><strong>Volumes</strong>：显示数据卷信息</li><li><strong>Networks</strong>：显示网络配置</li></ol><p>通过仪表板，用户可以：</p><ul><li>启动、停止、重启容器</li><li>查看容器日志</li><li>进入容器终端</li><li>删除容器和镜像</li></ul><h3 id="docker-cli-功能详解" tabindex="-1"><a class="header-anchor" href="#docker-cli-功能详解"><span>Docker CLI 功能详解</span></a></h3><h4 id="基础命令" tabindex="-1"><a class="header-anchor" href="#基础命令"><span>基础命令</span></a></h4><p><strong>docker run</strong>：运行容器</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 基本用法</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 后台运行并命名</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-nginx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 端口映射</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8080:80</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 挂载卷</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /host/path:/container/path</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>docker ps</strong>：查看容器</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看运行中的容器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看所有容器（包括停止的）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 格式化输出</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --format</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;table {{.Names}}\\t{{.Status}}\\t{{.Ports}}&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>docker images</strong>：查看镜像</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看所有镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> images</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看特定镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> images</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 格式化输出</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> images</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --format</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;table {{.Repository}}\\t{{.Tag}}\\t{{.Size}}&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="高级命令" tabindex="-1"><a class="header-anchor" href="#高级命令"><span>高级命令</span></a></h4><p><strong>docker exec</strong>：在运行的容器中执行命令</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 进入容器终端</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-container</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 执行单个命令</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-container</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /app</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>docker logs</strong>：查看容器日志</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看日志</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-container</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 实时查看日志</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-container</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看最近的日志</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --tail</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-container</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>docker build</strong>：构建镜像</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 从当前目录构建镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-app</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定 Dockerfile</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Dockerfile.prod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-app</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 构建参数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --build-arg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> NODE_ENV=production</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-app</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="组合命令示例" tabindex="-1"><a class="header-anchor" href="#组合命令示例"><span>组合命令示例</span></a></h4><p><strong>开发环境快速搭建</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动数据库</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mysql-db</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MYSQL_ROOT_PASSWORD=rootpass</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MYSQL_DATABASE=myapp</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3306:3306</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  mysql:8.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动应用</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-app</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3000:3000</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --link</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mysql-db:mysql</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  my-app:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>批量操作</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 停止所有容器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -aq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除所有容器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -aq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除所有未使用的镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> image</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prune</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="两者结合使用" tabindex="-1"><a class="header-anchor" href="#两者结合使用"><span>两者结合使用</span></a></h3><p>在实际使用中，Docker Desktop 和 CLI 并不是互斥的，而是可以结合使用：</p><h4 id="开发工作流示例" tabindex="-1"><a class="header-anchor" href="#开发工作流示例"><span>开发工作流示例</span></a></h4><ol><li><p><strong>使用 Docker Desktop 启动环境</strong></p><ul><li>通过图形界面快速启动 Docker</li><li>查看资源使用情况</li></ul></li><li><p><strong>使用 CLI 进行开发操作</strong></p><ul><li>构建和测试镜像</li><li>运行和调试容器</li><li>查看日志和执行命令</li></ul></li><li><p><strong>使用 Docker Desktop 监控</strong></p><ul><li>通过仪表板监控容器状态</li><li>查看资源使用情况</li></ul></li></ol><h4 id="自动化脚本" tabindex="-1"><a class="header-anchor" href="#自动化脚本"><span>自动化脚本</span></a></h4><p>可以编写脚本结合两者的优势：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 开发环境启动脚本</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用 CLI 构建镜像</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Building images...&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-app</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./app</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-db</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./database</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用 CLI 启动服务</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Starting services...&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用 Docker Desktop 监控（手动操作）</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Please check Docker Desktop dashboard for status&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="性能和资源考虑" tabindex="-1"><a class="header-anchor" href="#性能和资源考虑"><span>性能和资源考虑</span></a></h3><h4 id="资源消耗对比" tabindex="-1"><a class="header-anchor" href="#资源消耗对比"><span>资源消耗对比</span></a></h4><p><strong>Docker Desktop</strong>：</p><ul><li>内存占用：通常 1-2GB</li><li>CPU 占用：根据运行的容器而定</li><li>磁盘占用：Docker 镜像和容器数据</li></ul><p><strong>Docker CLI</strong>：</p><ul><li>内存占用：较低，主要取决于运行的容器</li><li>CPU 占用：与 Docker Desktop 相似</li><li>磁盘占用：相同</li></ul><h4 id="启动时间" tabindex="-1"><a class="header-anchor" href="#启动时间"><span>启动时间</span></a></h4><ul><li><strong>Docker Desktop</strong>：启动时间较长，需要启动虚拟机（Windows）或 HyperKit（macOS）</li><li><strong>Docker CLI</strong>：在 Linux 上启动速度最快，因为 Docker Engine 直接运行在主机上</li></ul><h3 id="安全性考虑" tabindex="-1"><a class="header-anchor" href="#安全性考虑"><span>安全性考虑</span></a></h3><h4 id="权限管理" tabindex="-1"><a class="header-anchor" href="#权限管理"><span>权限管理</span></a></h4><p><strong>Docker Desktop</strong>：</p><ul><li>通过图形界面简化权限管理</li><li>自动处理大部分权限配置</li></ul><p><strong>Docker CLI</strong>：</p><ul><li>需要手动管理用户组权限</li><li>更精细的权限控制</li></ul><h4 id="网络安全" tabindex="-1"><a class="header-anchor" href="#网络安全"><span>网络安全</span></a></h4><p>两者在网络安全性方面基本相同，都支持：</p><ul><li>网络隔离</li><li>端口映射控制</li><li>自定义网络配置</li></ul><h3 id="选择建议" tabindex="-1"><a class="header-anchor" href="#选择建议"><span>选择建议</span></a></h3><h4 id="根据用户类型选择" tabindex="-1"><a class="header-anchor" href="#根据用户类型选择"><span>根据用户类型选择</span></a></h4><p><strong>初学者</strong>：</p><ul><li>推荐使用 Docker Desktop</li><li>图形界面降低学习门槛</li><li>提供直观的状态反馈</li></ul><p><strong>专业开发人员</strong>：</p><ul><li>CLI 和 Desktop 结合使用</li><li>CLI 用于自动化和精细控制</li><li>Desktop 用于监控和快速操作</li></ul><p><strong>运维人员</strong>：</p><ul><li>主要使用 CLI</li><li>服务器环境通常不安装图形界面</li><li>脚本化操作更高效</li></ul><h4 id="根据使用场景选择" tabindex="-1"><a class="header-anchor" href="#根据使用场景选择"><span>根据使用场景选择</span></a></h4><p><strong>本地开发</strong>：</p><ul><li>Desktop + CLI 结合使用效果最佳</li><li>Desktop 提供便利的监控</li><li>CLI 提供灵活的操作</li></ul><p><strong>服务器部署</strong>：</p><ul><li>主要使用 CLI</li><li>通过脚本实现自动化部署</li><li>结合 CI/CD 工具使用</li></ul><p><strong>教学演示</strong>：</p><ul><li>Desktop 更适合演示</li><li>直观的界面便于理解</li><li>便于展示容器状态变化</li></ul><h3 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践"><span>最佳实践</span></a></h3><h4 id="学习路径建议" tabindex="-1"><a class="header-anchor" href="#学习路径建议"><span>学习路径建议</span></a></h4><ol><li><strong>入门阶段</strong>：使用 Docker Desktop 熟悉基本概念</li><li><strong>进阶阶段</strong>：学习 CLI 命令，理解底层机制</li><li><strong>专业阶段</strong>：CLI 和 Desktop 结合使用，发挥各自优势</li></ol><h4 id="工作流优化" tabindex="-1"><a class="header-anchor" href="#工作流优化"><span>工作流优化</span></a></h4><ol><li><strong>开发阶段</strong>：Desktop 用于快速启动和监控</li><li><strong>测试阶段</strong>：CLI 用于自动化测试</li><li><strong>部署阶段</strong>：CLI 用于生产环境部署</li></ol><p>通过本节内容，我们详细比较了 Docker Desktop 和命令行工具的特点、功能和适用场景。了解两者的差异有助于用户根据自己的需求和技能水平选择合适的工具，从而更高效地使用 Docker 进行应用开发和部署。</p>`,111)])])}const p=i(e,[["render",t]]),d=JSON.parse('{"path":"/posts/container-docker/1-2-2-docker-desktop-vs-command-line-tools.html","title":"Docker Desktop vs Command Line Tools - Choosing the Right Interface","lang":"zh-CN","frontmatter":{"title":"Docker Desktop vs Command Line Tools - Choosing the Right Interface","date":"2025-08-30T00:00:00.000Z","categories":["Docker"],"tags":["container-docker"],"published":true,"description":"Docker 桌面版与命令行工具 Docker Desktop 概述 Docker Desktop 是 Docker 官方提供的桌面应用程序，为 Windows 和 macOS 用户提供了一体化的 Docker 开发环境。它不仅包含了 Docker Engine，还集成了 Kubernetes、Docker Compose 等工具，并提供了直观的图形用...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker Desktop vs Command Line Tools - Choosing the Right Interface\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-30T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-01T13:27:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://houbb.github.io/blog-micro-service/posts/container-docker/1-2-2-docker-desktop-vs-command-line-tools.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Docker Desktop vs Command Line Tools - Choosing the Right Interface"}],["meta",{"property":"og:description","content":"Docker 桌面版与命令行工具 Docker Desktop 概述 Docker Desktop 是 Docker 官方提供的桌面应用程序，为 Windows 和 macOS 用户提供了一体化的 Docker 开发环境。它不仅包含了 Docker Engine，还集成了 Kubernetes、Docker Compose 等工具，并提供了直观的图形用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-01T13:27:06.000Z"}],["meta",{"property":"article:tag","content":"container-docker"}],["meta",{"property":"article:published_time","content":"2025-08-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-01T13:27:06.000Z"}]]},"git":{"createdTime":1756698707000,"updatedTime":1756733226000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":2},{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":1,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":7,"words":2099},"filePathRelative":"posts/container-docker/1-2-2-docker-desktop-vs-command-line-tools.md","excerpt":"<h2>Docker 桌面版与命令行工具</h2>\\n<h3>Docker Desktop 概述</h3>\\n<p>Docker Desktop 是 Docker 官方提供的桌面应用程序，为 Windows 和 macOS 用户提供了一体化的 Docker 开发环境。它不仅包含了 Docker Engine，还集成了 Kubernetes、Docker Compose 等工具，并提供了直观的图形用户界面。</p>\\n<h4>核心组件</h4>\\n<p>Docker Desktop 包含以下核心组件：</p>\\n<ol>\\n<li><strong>Docker Engine</strong>：容器运行时环境</li>\\n<li><strong>Docker Compose</strong>：多容器应用编排工具</li>\\n<li><strong>Kubernetes</strong>：容器编排平台（可选）</li>\\n<li><strong>Docker CLI</strong>：命令行接口工具</li>\\n<li><strong>图形用户界面</strong>：系统托盘图标和设置界面</li>\\n</ol>","autoDesc":true}');export{p as comp,d as data};
